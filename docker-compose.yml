version: '3.8'

services:
  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: microservices_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-service:
    build: ./api-service
    environment:
      DB_HOST: database
      DB_NAME: microservices_db
      DB_USER: postgres
      DB_PASSWORD: postgres
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker-service:
    build: ./worker-service
    environment:
      DB_HOST: database
      DB_NAME: microservices_db
      DB_USER: postgres
      DB_PASSWORD: postgres
    depends_on:
      database:
        condition: service_healthy

  frontend-service:
    build: ./frontend-service
    environment:
      REACT_APP_API_URL: http://localhost:3000
    ports:
      - "8080:8080"
    depends_on:
      - api-service

volumes:
  postgres_data: